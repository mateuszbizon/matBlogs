generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  name     String
  password String
  profile  Profile?
  posts    Post[]
  postRatings PostRating[]
  comments Comment[]
  commentReplies CommentReply[]
}

model Profile {
  id     String @id @default(uuid())
  photo  String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Post {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  title      String   
  content    String
  titlePhoto String
  slug       String   @unique
  author     User     @relation(fields: [authorId], references: [id])
  authorId   String
  comments    Comment[]
  postRatings PostRating[]
}

model Comment {
  id           String @id @default(uuid())
  content      String
  post         Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId       String
  commentReplies CommentReply[]
  author User @relation(fields: [authorId], references: [id])
  authorId String
}

model CommentReply {
  id         String  @id @default(uuid())
  content    String
  replyingTo String
  comment    Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  commentId  String
  author User @relation(fields: [authorId], references: [id])
  authorId String
}

model PostRating {
  id         String  @id @default(uuid())
  value Float
  post Post @relation(fields: [postId], references: [id])
  postId String
  user User @relation(fields: [userId], references: [id])
  userId String
}